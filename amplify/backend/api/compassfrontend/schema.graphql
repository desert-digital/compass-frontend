type Event @model @auth(rules: [{ allow: private }]){
  id: ID!
  company: ID
  body: String
  start: String 
  end: String
  item: String
  item_id: String
  status: String
}

type Vessel @model @auth(rules: [{ allow: private }]){
  id: ID!
  company: ID
  name: String
  type: String
  defaultWorkflow: WorkflowSteps @hasOne
}

type Contact @model @auth(rules: [{ allow: private }]){
  id: ID!
  company: ID
  name: String
  email: String 
}

type Action @model @auth(rules: [{ allow: private }]){
  id: ID!
  company: ID
  status: Boolean
  description: String
  notes: String 
  duration: Int
}

type ChecklistSteps @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String
  actions: [Action] @hasMany
}

type Checklist @model @auth(rules: [{ allow: private }]){
  id: ID!
  company: ID
  owner: Contact @hasOne
  steps: ChecklistSteps @hasOne
  start: AWSDate
  end: AWSDate 
}

type WorkflowSteps @model @auth(rules: [{allow: private}]) {
  id: ID!
  name: String
  actions: [ChecklistSteps] @hasMany
}

type Workflow @model @auth(rules: [{ allow: private }]){
  id: ID!
  company: ID!
  owner: Contact @hasOne
  steps: WorkflowSteps @hasOne
  start: AWSDate
  end: AWSDate 
}